#!/bin/bash

source "$HOME/okaeri/config/boot"

# Exports

export OKAERI_PATH
export OKAERI_VERSION

export OKAERI_HOSTNAME

export OKAERI_INITIALIZE_SCRIPT

export OKAERI_DOCKER_VOLUMES_PATH
export OKAERI_BUILD_PATH
export OKAERI_DUMP_PATH
export OKAERI_TMP_PATH
export OKAERI_TOOLS_PATH
export OKAERI_WORK_PATH

export PATH="$OKAERI_PATH/usr/bin:$PATH"

# VS Code

alias code="flatpak run com.visualstudio.code &>/dev/null"
alias bake="rake --rakefile $OKAERI_PATH/lib/projects/setup/Rakefile"

# RB Env

if [ -d "$HOME/.rbenv" ]; then
	export PATH="$HOME/.rbenv/bin:$PATH"
fi

## SQLPackage

if [ -d "$OKAERI_TOOLS_PATH/sqlpackage" ]; then
	export PATH="$OKAERI_TOOLS_PATH/sqlpackage:$PATH"
fi

# Working Directories

if [ ! -d $OKAERI_DOCKER_VOLUMES_PATH ]; then
	mkdir $OKAERI_DOCKER_VOLUMES_PATH
	touch "$OKAERI_DOCKER_VOLUMES_PATH/.ignore-sync"
fi

if [ ! -d $OKAERI_BUILD_PATH ]; then
	mkdir $OKAERI_BUILD_PATH
	touch "$OKAERI_BUILD_PATH/.ignore-sync"
fi

if [ ! -d $OKAERI_DUMP_PATH ]; then
	mkdir $OKAERI_DUMP_PATH
	touch "$OKAERI_DUMP_PATH/.ignore-sync"
fi

if [ ! -d $OKAERI_TMP_PATH ]; then
	mkdir $OKAERI_TMP_PATH
	touch "$OKAERI_TMP_PATH/.ignore-sync"
fi

if [ ! -d $OKAERI_TOOLS_PATH ]; then
	mkdir $OKAERI_TOOLS_PATH
	touch "$OKAERI_TOOLS_PATH/.ignore-sync"
fi

if [ ! -d $OKAERI_WORK_PATH ]; then
	mkdir $OKAERI_WORK_PATH
fi

echo "Okaeri $OKAERI_VERSION"